/*
Deployment script for SmallBlessings

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SmallBlessings"
:setvar DefaultFilePrefix "SmallBlessings"
:setvar DefaultDataPath "c:\Program Files\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "c:\Program Files\Microsoft SQL Server\MSSQL10.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Dependents]...';


GO
CREATE TABLE [dbo].[Dependents] (
    [DependentID]  INT          IDENTITY (1, 1) NOT NULL,
    [Name]         VARCHAR (50) NOT NULL,
    [BirthDate]    DATE         NOT NULL,
    [Relationship] VARCHAR (50) NOT NULL,
    [LivesWith]    VARCHAR (50) NOT NULL,
    [PersonID]     INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([DependentID] ASC)
);


GO
PRINT N'Creating [dbo].[Items]...';


GO
CREATE TABLE [dbo].[Items] (
    [ItemId]      INT           IDENTITY (1, 1) NOT NULL,
    [Comments]    VARCHAR (MAX) NULL,
    [Description] VARCHAR (MAX) NOT NULL,
    [Initials]    VARCHAR (10)  NOT NULL,
    [Date]        DATETIME      NOT NULL,
    [PersonID]    INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([ItemId] ASC)
);


GO
PRINT N'Creating [dbo].[Person]...';


GO
CREATE TABLE [dbo].[Person] (
    [PersonID]          INT            IDENTITY (1, 1) NOT NULL,
    [FirstName]         VARCHAR (50)   NOT NULL,
    [MiddleInitial]     VARCHAR (1)    NULL,
    [LastName]          VARCHAR (50)   NOT NULL,
    [Address]           VARCHAR (50)   NOT NULL,
    [Phone]             VARCHAR (50)   NOT NULL,
    [ChurchHomeFlag]    BIT            NOT NULL,
    [ChurchHomeName]    VARCHAR (50)   NULL,
    [Opinion]           NVARCHAR (MAX) NULL,
    [BirthDate]         DATE           NOT NULL,
    [DateCreated]       DATETIME       NOT NULL,
    [DateUpdated]       DATETIME       NOT NULL,
    [PhoneContactFlag]  BIT            NOT NULL,
    [City]              VARCHAR (50)   NOT NULL,
    [State]             VARCHAR (50)   NOT NULL,
    [Zip]               VARCHAR (5)    NOT NULL,
    [ExportFlag]        BIT            NOT NULL,
    [ProofGuardianFlag] BIT            NOT NULL,
    [LockItemDate]      DATETIME       NULL,
    [LockItemFlag]      BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([PersonID] ASC)
);


GO
PRINT N'Creating [dbo].[FK_Dependents_Person]...';


GO
ALTER TABLE [dbo].[Dependents]
    ADD CONSTRAINT [FK_Dependents_Person] FOREIGN KEY ([PersonID]) REFERENCES [dbo].[Person] ([PersonID]);


GO
PRINT N'Creating [dbo].[FK_Items_Person]...';


GO
ALTER TABLE [dbo].[Items]
    ADD CONSTRAINT [FK_Items_Person] FOREIGN KEY ([PersonID]) REFERENCES [dbo].[Person] ([PersonID]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '770d5199-7f7c-4789-afb3-ad6421176858')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('770d5199-7f7c-4789-afb3-ad6421176858')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '55e6303d-555c-471c-b2a0-4a24f194df37')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('55e6303d-555c-471c-b2a0-4a24f194df37')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '45b06340-7452-4ac7-b87e-6a1c2cf4753f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('45b06340-7452-4ac7-b87e-6a1c2cf4753f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '32581347-4d2a-40b3-8966-e7658a1958a5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('32581347-4d2a-40b3-8966-e7658a1958a5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '90366f45-4e96-44e5-92a6-1cd71d98297c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('90366f45-4e96-44e5-92a6-1cd71d98297c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5070bec1-6158-48c3-9781-d1482e9cc083')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5070bec1-6158-48c3-9781-d1482e9cc083')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '40ce795b-2ad1-4975-a743-612d6c8b3175')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('40ce795b-2ad1-4975-a743-612d6c8b3175')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7c49e258-8d11-40bf-9b33-1b61cda5baa1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7c49e258-8d11-40bf-9b33-1b61cda5baa1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c4c8551a-4ab7-4172-91fb-9bd4d9fc8c6d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c4c8551a-4ab7-4172-91fb-9bd4d9fc8c6d')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
